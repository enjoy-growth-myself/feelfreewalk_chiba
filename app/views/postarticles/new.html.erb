<div class="container">
    <div class="row">
        <h2 class="col-6 offset-3 edit-title">新規登録</h2>
	</div>

		<%= form_with(model: @postarticle, local: true) do |form| %>
		
		<div class="row">
	        <div class="col-6 offset-3 edit-field ">
	        	<%= render 'layouts/error_messages', error: @postarticle %>
		        <p class="post-text">タイトル(16文字以内)</p>
	        	<%= form.text_field :title, class: 'form-control'  %>

		         <p class="post-text" rows="">本文</p>
	        	<%= form.text_area :body, class: "form-control input-lg" , size: "20x20" %>
		        <p  class="post-text">住所</p>
	        	<%= form.text_field :address, class: 'form-control' %><br>
	        	
	       		<input type="button" value="googlemapに場所を表示" onclick="codeAddress()">
	       		<div id="display">緯度経度</div>
	       		<%= form.fields_for :postarticle_images do |image| %>
	        			<%= image.attachment_field :image %>
			      <div class="actions">
			        <%= form.submit "新規投稿", class: "btn btn-primary pull-right" %>
			      </div>
			</div>
	    <% end %>
    	<% end %>
    </div>
</div>

<h2>googlemap</h2>

<div id='map'></div>
<ul>
    <li>lat: <span id="lat"></span></li>
    <li>lng: <span id="lng"></span></li>
    <li>address: <span id="address"></span></li>
  </ul>

<style>
/*エラーチェック用*/

#map{
  height: 1000px;
  width: 1000px;
}
</style>

<script>

 let map
 let geocoder

 const display = document.getElementById('display')

function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 35.6071334, lng: 140.1052183},
    zoom: 15,
  });

  // 新規投稿なので初期マーカーは不要
  // marker = new google.maps.Marker({
  //   position: {lat: 35.6071334, lng: 140.1052183},
  //   map: map
  // });

  // クリックイベントを追加
  let address;
   map.addListener('click', function(e) {
        geocoder.geocode({
          location: e.latLng
        }, function(results, status) {
        	address =  results[0].formatted_address;
          if (status !== 'OK') {
            alert('Failed: ' + status);
            return;
          }
          // results[0].formatted_address
          if (results[0]) {
            new google.maps.Marker({
               position: e.latLng,
 	           map: map,
               title: results[0].formatted_address,
               animation: google.maps.Animation.DROP
            });
          } else {
            alert('No results found');
            return;
          }
          document.getElementById('lat').textContent = e.latLng.lat();
          document.getElementById('lng').textContent = e.latLng.lng();
          document.getElementById('postarticle_address').value = address;
        });
      });
    }

    



function codeAddress(){
  let inputAddress = document.getElementById('address').value;

  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      map.setCenter(results[0].geometry.location);
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      display.textContent = "検索結果：" + results[ 0 ].geometry.location
    } else {
      alert('該当する場所がありませんでした：' + status);
    }
  });   
}


</script>
<script src="https://maps.googleapis.com/maps/api/js?language=ja&region=JP&key=AIzaSyAr3I1ZY04jp61VXJPMRAwnRcfKrFeWP1s&callback=initMap" async defer></script>